#version 110

varying vec4 TexCoord0;

void main(void) {
	gl_Position = ftransform();
	gl_FrontColor = gl_Color;

	TexCoord0 = gl_MultiTexCoord0;
}

%% -- FRAG
#version 110

uniform sampler2D tex;
uniform vec4 color;
uniform float deform;

varying vec4 TexCoord0;

float pi = 2.0 * asin(1.0);

float g(float x, float p) {
    return 0.5 * (pow(2.0 * x - 1.0, p) + 1.0);
}

float f(float x, float p) {
    if(x > 0.5) {
        return g(x, p);
    } else {
        return 1.0 - g(1.0 - x, p);
    }
}

vec2 apply_deform(vec2 uv, float strength) {
    float p = 1.0 + strength * length(vec2(0.5, 0.5) - uv.xy);
    uv.x = f(uv.x, p);
    uv.y = f(uv.y, p);
    return uv;
}

void main(void) {
    vec4 uv = TexCoord0;
    vec4 uv_orig = uv;
    vec4 texel;

    const float limit = 1.0;
    const float step = 0.25;
    const float num = 1.0 + limit / step;

    gl_FragColor = vec4(0.0);

    for(float i = 0.0; i <= limit; i += step) {
        uv.xy = apply_deform(uv_orig.xy, deform * i);
        texel = texture2D(tex, (uv * gl_TextureMatrixTranspose[0]).xy);
        gl_FragColor += vec4(color.rgb, color.a * texel.a);
    }

    gl_FragColor /= num;
}
